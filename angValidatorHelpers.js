// Generated by CoffeeScript 1.6.3
(function(ng) {
  var AngValid_Helpers, angAlphaNumericController, _DIRECTIVES_NAMES, _REGEX, _VALIDATOR_IDENTIFIERS;
  _REGEX = {
    ALPHANUMERIC: /^[a-zA-Z0-9]+$/,
    ALPHANUMERIC_LOWERCASE: /^[a-z0-9]+$/
  };
  _DIRECTIVES_NAMES = {
    ALPHANUMERIC: "angAlphaNumeric",
    PARSETONUMBER: "angParseToNumber"
  };
  _VALIDATOR_IDENTIFIERS = {
    APLHANUMERIC: "alphanumeric"
  };
  AngValid_Helpers = ng.module('angValidateHelpers', []);
  /*
  create the directive for parsing value to number
  */

  AngValid_Helpers.directive("" + _DIRECTIVES_NAMES.PARSETONUMBER, function() {
    return {
      restrict: 'A',
      require: 'ngModel',
      link: function(scope, iElem, iAttr, oController) {
        oController.$parsers.push(function(value) {
          if (value === 0) {
            return 0;
          } else {
            return parseFloat(value || '');
          }
        });
      }
    };
  });
  /*
  Directive to create Alphanumeric
  */

  angAlphaNumericController = function(scope, iElem, oAttr, oController) {
    var bOnlyAllowLowerCase, checkPattern, sRegPattern;
    bOnlyAllowLowerCase = oAttr.lowercase ? scope.$eval(oAttr.lowercase) : false;
    sRegPattern = bOnlyAllowLowerCase === true ? _REGEX.ALPHANUMERIC_LOWERCASE : _REGEX.ALPHANUMERIC;
    /*
      this will check the pattern for the value supplied
    */

    checkPattern = function(value) {
      console.log(sRegPattern);
      if (sRegPattern.test(value)) {
        console.log("passed: ", value);
        oController.$setValidity("" + _VALIDATOR_IDENTIFIERS.APLHANUMERIC, true);
      } else {
        console.log("failed: ", value);
        oController.$setValidity("" + _VALIDATOR_IDENTIFIERS.APLHANUMERIC, false);
      }
    };
    oController.$parsers.push(checkPattern);
  };
  AngValid_Helpers.directive("" + _DIRECTIVES_NAMES.ALPHANUMERIC, function() {
    return {
      restrict: 'A',
      require: 'ngModel',
      link: angAlphaNumericController
    };
  });
})(angular);
